[supervisord]
logfile=/home/appuser/app/logs/supervisord.log  ; (main log file; default is $CWD/supervisord.log)
logfile_maxbytes=50MB                           ; (maximum size of main logfile before rotation; default is 50MB)
logfile_backups=10                              ; (number of main logfile backups to keep; default is 10)
loglevel=info                                   ; (logging level; default is info; other options: debug, warn, trace)
pidfile=/home/appuser/app/logs/supervisord.pid  ; (file path for storing supervisord process ID; default is supervisord.pid)
childlogdir=/home/appuser/app/logs              ; (directory for child process logs; default is $TEMP, here overridden to a specific path)

[program:cron]
command=sudo /usr/sbin/cron -f -L 15                 ; (command to run cron daemon with log level 15)
stdout_logfile=/home/appuser/app/logs/cron.log       ; (path for standard output log of cron)
stderr_logfile=/home/appuser/app/logs/cron_error.log ; (path for standard error log of cron)
autostart=true                                       ; (whether to automatically start cron; default is true)
autorestart=true                                     ; (whether to automatically restart cron on failure; default is true)
startsecs=0                                          ; (number of seconds to wait after startup to consider the start successful; default is 0)
exitcodes=0                                          ; (exit code indicating successful exit; default is 0)
priority=500                                         ; (program priority, lower numbers start first; default is 500)

[program:flask]
command=/home/appuser/app/bin/entrypoint.sh             ; (command to start the Flask application using an entrypoint script)
stdout_logfile=/home/appuser/app/logs/flask.log         ; (path for standard output log of Flask app)
stderr_logfile=/home/appuser/app/logs/flask_error.log   ; (path for standard error log of Flask app)
autostart=true                                          ; (whether to automatically start the Flask app; default is true)
autorestart=true                                        ; (whether to automatically restart the Flask app on failure; default is true)
startsecs=0                                             ; (number of seconds to wait after startup to consider the start successful; default is 0)
priority=999                                            ; (program priority, lower numbers start first; this one starts after cron due to higher number)
